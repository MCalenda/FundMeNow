{"ast":null,"code":"var _jsxFileName = \"/Users/mc/Desktop/sdd_project/src/components/SimpleStorage.js\",\n  _s = $RefreshSig$();\nimport { ethers } from \"ethers\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.Web3Provider(window.Ethereum);\nexport default function SimpleStorage() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText(\"Wallet Connected\");\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, SimpleStorage_abi, tempSigner);\n    setContract(tempContract);\n  };\n  const setHandler = event => {\n    event.preventDefault();\n    console.log(\"sending \" + event.target.setText.value + \" to the contract\");\n    contract.set(event.target.setText.value);\n  };\n  const getCurrentVal = async () => {\n    let val = await contract.get();\n    setCurrentContractVal(val);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", \"Get/Set Contract interaction\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"setText\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Update Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getCurrentVal,\n        style: {\n          marginTop: \"5em\"\n        },\n        children: [\" \", \"Get Current Contract Value\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), currentContractVal, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleStorage, \"2EVeE77YR9u+F/YdnxyIzmTvQpE=\");\n_c = SimpleStorage;\nvar _c;\n$RefreshReg$(_c, \"SimpleStorage\");","map":{"version":3,"names":["ethers","useState","jsxDEV","_jsxDEV","provider","providers","Web3Provider","window","Ethereum","SimpleStorage","_s","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connectWalletHandler","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","setConnButtonText","catch","error","message","console","log","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","setProvider","tempSigner","getSigner","setSigner","tempContract","Contract","contractAddress","SimpleStorage_abi","setContract","setHandler","event","preventDefault","target","setText","value","contract","set","getCurrentVal","val","get","setCurrentContractVal","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","connButtonText","onSubmit","id","type","style","marginTop","currentContractVal","_c","$RefreshReg$"],"sources":["/Users/mc/Desktop/sdd_project/src/components/SimpleStorage.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { useState } from \"react\";\n\nconst provider = new ethers.providers.Web3Provider(window.Ethereum);\n\nexport default function SimpleStorage() {\n    \n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText(\"Wallet Connected\");\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log(\"Need to install MetaMask\");\n      setErrorMessage(\"Please install MetaMask browser extension to interact\");\n    }\n  };\n\n  // update account, will cause component re-render\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  };\n\n  // listen for account changes\n  window.ethereum.on(\"accountsChanged\", accountChangedHandler);\n\n  window.ethereum.on(\"chainChanged\", chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(\n      contractAddress,\n      SimpleStorage_abi,\n      tempSigner\n    );\n    setContract(tempContract);\n  };\n\n  const setHandler = (event) => {\n    event.preventDefault();\n    console.log(\"sending \" + event.target.setText.value + \" to the contract\");\n    contract.set(event.target.setText.value);\n  };\n\n  const getCurrentVal = async () => {\n    let val = await contract.get();\n    setCurrentContractVal(val);\n  };\n\n  return (\n    <div>\n      <h4> {\"Get/Set Contract interaction\"} </h4>\n      <button onClick={connectWalletHandler}>{connButtonText}</button>\n      <div>\n        <h3>Address: {defaultAccount}</h3>\n      </div>\n      <form onSubmit={setHandler}>\n        <input id=\"setText\" type=\"text\" />\n        <button type={\"submit\"}> Update Contract </button>\n      </form>\n      <div>\n        <button onClick={getCurrentVal} style={{ marginTop: \"5em\" }}>\n          {\" \"}\n          Get Current Contract Value{\" \"}\n        </button>\n      </div>\n      {currentContractVal}\n      {errorMessage}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}