{"ast":null,"code":"var _jsxFileName = \"/Users/mc/Desktop/sdd_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { SimpleStorage } from \"./abi/abi\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\n\n// Access our wallet inside of our dapp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address of the deployed smart contract\nconst contractAddress = \"0x7244F72fc546BE631fd8a18297668fDf50a2b025\";\nconst storageContract = new web3.eth.Contract(SimpleStorage, contractAddress);\nfunction App() {\n  _s();\n  // Hold variables that will interact with our contract and frontend\n  const [number, setUint] = useState(0);\n  const [getNumber, setGet] = useState(\"0\");\n  const numberSet = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    // Get permission to access user funds to pay for gas fees\n    const gas = await storageContract.methods.set(number).estimateGas();\n    const post = await storageContract.methods.set(number).send({\n      from: account,\n      gas\n    });\n  };\n  const numberGet = async t => {\n    t.preventDefault();\n    const post = await storageContract.methods.get().call();\n    setGet(post);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: numberSet,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Set your uint256:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            name: \"name\",\n            onChange: t => setUint(t.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Confirm\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: numberGet,\n        type: \"button\",\n        children: \"Get your uint256\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), getNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+WkY68OeGsyeXlzyuCLeqetPIqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SimpleStorage","Web3","jsxDEV","_jsxDEV","web3","givenProvider","contractAddress","storageContract","eth","Contract","App","_s","number","setUint","getNumber","setGet","numberSet","t","preventDefault","accounts","window","ethereum","enable","account","gas","methods","set","estimateGas","post","send","from","numberGet","get","call","className","children","onSubmit","type","name","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mc/Desktop/sdd_project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SimpleStorage } from \"./abi/abi\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\n\n// Access our wallet inside of our dapp\nconst web3 = new Web3(Web3.givenProvider);\n// Contract address of the deployed smart contract\nconst contractAddress = \"0x7244F72fc546BE631fd8a18297668fDf50a2b025\";\nconst storageContract = new web3.eth.Contract(SimpleStorage, contractAddress);\n\nfunction App() {\n  // Hold variables that will interact with our contract and frontend\n  const [number, setUint] = useState(0);\n  const [getNumber, setGet] = useState(\"0\");\n\n  const numberSet = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    // Get permission to access user funds to pay for gas fees\n    const gas = await storageContract.methods.set(number).estimateGas();\n    const post = await storageContract.methods.set(number).send({\n      from: account,\n      gas,\n    });\n  };\n\n  const numberGet = async (t) => {\n    t.preventDefault();\n    const post = await storageContract.methods.get().call();\n    setGet(post);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"card\">\n        <form className=\"form\" onSubmit={numberSet}>\n          <label>\n            Set your uint256:\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              onChange={(t) => setUint(t.target.value)}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" value=\"Confirm\">\n            Confirm\n          </button>\n        </form>\n        <br />\n        <button className=\"button\" onClick={numberGet} type=\"button\">\n          Get your uint256\n        </button>\n        {getNumber}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}